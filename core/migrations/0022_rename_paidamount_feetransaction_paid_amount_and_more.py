# Generated by Django 5.2.3 on 2025-06-27 15:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_userprofile_picture'),
    ]

    operations = [
        migrations.RenameField(
            model_name='feetransaction',
            old_name='paidAmount',
            new_name='paid_amount',
        ),
        migrations.RemoveField(
            model_name='feetransaction',
            name='entryDate',
        ),
        migrations.RemoveField(
            model_name='feetransaction',
            name='studentFee',
        ),
        migrations.RemoveField(
            model_name='feetransaction',
            name='transactionId',
        ),
        migrations.RemoveField(
            model_name='feetransaction',
            name='transactionType',
        ),
        migrations.AddField(
            model_name='feetransaction',
            name='student_fee',
            field=models.ManyToManyField(related_name='fee_transactions', to='core.studentfees'),
        ),
        migrations.AddField(
            model_name='feetransaction',
            name='transaction_date',
            field=models.DateTimeField(blank=True, help_text='Payment completion timestamp', null=True, verbose_name='transaction date'),
        ),
        migrations.AddField(
            model_name='feetransaction',
            name='transaction_id',
            field=models.CharField(default=0, max_length=255, unique=True, verbose_name='transaction id'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='feetransaction',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='fee_transactions', to='core.student'),
        ),
        migrations.CreateModel(
            name='SSLCommerzSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, help_text='SSLCOMMERZ session identifier for transaction tracking', max_length=255, null=True, verbose_name='session key')),
                ('validation_id', models.CharField(blank=True, help_text='SSLCOMMERZ validation identifier', max_length=255, verbose_name='validation id')),
                ('transaction_id', models.CharField(help_text='Auto-generated ID in format: XXX_XXX_XXXXXXXXXX', max_length=255, unique=True, verbose_name='transaction id')),
                ('status', models.CharField(choices=[('VALID', 'Valid'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('UNATTEMPTED', 'Unattempted'), ('EXPIRED', 'Expired')], default='UNATTEMPTED', max_length=50, verbose_name='status')),
                ('created_at', models.DateTimeField(blank=True, help_text='Transaction creation timestamp', null=True, verbose_name='created at')),
                ('validated_on', models.DateTimeField(blank=True, help_text='Transaction validation timestamp', null=True, verbose_name='validated date')),
                ('currency', models.CharField(default='BDT', help_text='Merchant settlement currency (e.g., BDT, USD)', max_length=10, verbose_name='currency')),
                ('currency_type', models.CharField(default='BDT', help_text='Transaction request currency', max_length=10, verbose_name='currency type')),
                ('currency_amount', models.DecimalField(decimal_places=2, help_text='Transaction request amount', max_digits=12, verbose_name='currency amount')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Final amount after conversions', max_digits=12, null=True, verbose_name='amount')),
                ('store_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Net amount after bank charges', max_digits=12, null=True, verbose_name='store amount')),
                ('card_type', models.CharField(blank=True, help_text='Payment method (e.g., VISA, BKASH)', max_length=255, verbose_name='card type')),
                ('card_no', models.CharField(blank=True, help_text='Customer card number or mobile banking reference', max_length=120, verbose_name='card number')),
                ('card_brand', models.CharField(blank=True, help_text='Payment brand (VISA, MASTER, AMEX, IB, MOBILEBANKING, etc.)', max_length=55, verbose_name='card brand')),
                ('card_issuer', models.CharField(blank=True, help_text='Issuing bank name', max_length=120, verbose_name='issuer bank name')),
                ('card_issuer_country', models.CharField(blank=True, help_text='Issuer country name', max_length=120, verbose_name='card issuer country')),
                ('card_issuer_country_code', models.CharField(blank=True, help_text='ISO country code', max_length=5, verbose_name='card issuer country code')),
                ('bank_tran_id', models.CharField(blank=True, help_text="Bank's transaction ID", max_length=120, verbose_name='bank transaction id')),
                ('verify_sign', models.CharField(blank=True, help_text='Cryptographic signature for IPN data validation', max_length=255, verbose_name='verify sign')),
                ('verify_key', models.CharField(blank=True, help_text='Parameters used for signature', max_length=1024, verbose_name='verify key')),
                ('risk_level', models.IntegerField(blank=True, help_text='transaction risk level (0 = safe, 1 = high risk)', null=True, verbose_name='risk level')),
                ('risk_title', models.CharField(blank=True, help_text='Risk assessment details', max_length=50, verbose_name='risk title')),
                ('fee_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sslcommerz_sessions', to='core.feetransaction', verbose_name='fee transaction')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sslcommerz_sessions', to='core.student', verbose_name='student')),
            ],
        ),
    ]
